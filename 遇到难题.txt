

出现问题的情况
1.
在项目中使用了async/await,就开始报错regeneratorRuntime is not defined


出现问题的原因
Babel在转化一些包的时候，比如说ES6转ES5，需要使用一些辅助函数，这些辅助函数就在babel-runtime这个单独的模块中，当缺失这个单独模块的时候他就会报错，我们需要去下载这个包


npm install @babel/plugin-transform-runtime -D
并配置

2.手写ajax XMLHR请求时，使用的promise异步进行请求，但是过程却是同步的

原因
get路径如果一样的话，不会进行异步加载，必须等上一个请求加载完成后再进行后续的加载 promise是异步的，但是到了ajax时由于get请求的路径完全一样，所以会变成同步，应该时ajax源码中进行了相关的配置

3.react学习系统项目中redis配置参数问题，连接不成功

原因
因为版本不一样，新的版本所需要的连接参数和以前的参数不一样，导致连接不成功。回退到之前的旧版本，暂时解决了

4.react 路由部分参数改变时并不会重新渲染页面
根本原因：
props的改变并不会引起组件的重新渲染，只有state的变化才会引起组件的重新渲染，而url参数属于props，故改变url参数并不会引起组件的重新渲染。
useEffect也监听不到不是state中的变量。
解决方法：使用了uselocation来解决。监听路由的变化。但是监听window.location就达不到效果。应该是usestation内部改变了state，所以导致了组件重新渲染。

5.浏览器缓存机制，更换页面不重新渲染css

6.react项目开发环境下路由可以正常跳转，生产环境找不到对应路径
原因：react使用了browserRouter：browserRouter中的Link则借助html5里面history的新的api，可以使用js改变url的值，而不会向服务端发请求。(重点：这个api不会发请求，只是改变了url)，但是当我们进去其他路由，如果刷新浏览器，就会报404错误，刷新浏览器，相当于浏览器向服务端请求/manage/admin/list，但是服务端（或者nginx）并没有配置这样一个路由，找不到当然返回404。
解决：真正的配置，只需要在nginx的配置，比如我使用的默认配置（/etc/nginx/conf.d/default.conf),加上如下：
location / {try_files $uri /index.html;}

-----------------------------------实习遇到的难题------------------------------------------------------

1. react + ant design pro 动态切换主题
原因：项目一次编译后，样式已经被打包进去，线上无法在用户界面切换主题。因为切换主题需要更改默认配置，而更改默认配置后需要重新编译，但是线上不可能再重新编译，已经是打包好的包。所以无法动态切换主题。
解决：antd提供了configProvider，可以从外界对主题进行更改。原理是它可以动态地更改全局组件地className，更改它的前缀，因此来应用不同的样式文件。要应用的主题是提前已经压缩打包好并都进行了引入，通过更改类名来应用对应的css文件样式。并且工程化，css样式文件单独抽离，更改对应的主题文件可直接更换主题。ui直接设计处css文件进行替换即可，不用更改项目代码。
对应链接：https://blog.csdn.net/m0_58016522/article/details/122067153



