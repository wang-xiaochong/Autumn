
csrf攻击过程

1. 用户C打开浏览器，访问受信任网站A，输入用户名和密码请求登录网站A；

2.在用户信息通过验证后，网站A产生Cookie信息并返回给浏览器，此时用户登录网站A成功，可以正常发送请求到网站A；

3. 用户未退出网站A之前，在同一浏览器中，打开一个TAB页访问网站B；

4. 网站B接收到用户请求后，返回一些攻击性代码，并发出一个请求要求访问第三方站点A；

5. 浏览器在接收到这些攻击性代码后，根据网站B的请求，在用户不知情的情况下携带Cookie信息，向网站A发出请求。网站A并不知道该请求其实是由B发起的，所以会根据用户C的Cookie信息以C的权限处理该请求，导致来自网站B的恶意代码被执行。






攻击者盗用了你的身份 以你的名义发送恶意请求


恶意请求：
    发送邮件 发消息 盗取账号 购买一些物品 虚拟物品转账
     


在正常网站上登录后，没有退出，浏览了其他网站，其他网站中携带自动执行的黑代码，发送了恶意请求



CSRF攻击的本质原因
    正常网站的web服务器验证不够，只验证了登录状态 并不一定是由用户触发的 攻击者发送了伪请求

防御
    1.尽量使用POST
    2.加入验证码
    3.验证Referer 请求的网页来源 在请求头中 但是被抓包后可以修改 所以也不安全
    4.token 
        在http的请求中或者头信息中传递token 抵御CSRF攻击的关键在于：在请求中放入攻击者所不能伪造的信息，并且该信息不存在于Cookie之中。鉴于此，系统开发者可以在HTTP请求中以参数的形式加入一个随机产生的token，并在服务器端建立一个拦截器来验证这个token，如果请求中没有token或者token内容不正确，则认为可能是CSRF攻击而拒绝该请求。